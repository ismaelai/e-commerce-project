[{"/home/ismaelai/development/e-commerce-project/client/src/App.js":"1","/home/ismaelai/development/e-commerce-project/client/src/index.js":"2","/home/ismaelai/development/e-commerce-project/client/src/pages/Home.js":"3","/home/ismaelai/development/e-commerce-project/client/src/pages/auth/Login.js":"4","/home/ismaelai/development/e-commerce-project/client/src/pages/auth/Register.js":"5","/home/ismaelai/development/e-commerce-project/client/src/components/nav/Header.js":"6","/home/ismaelai/development/e-commerce-project/client/src/firebase.js":"7","/home/ismaelai/development/e-commerce-project/client/src/serviceWorker.js":"8","/home/ismaelai/development/e-commerce-project/client/src/pages/auth/RegisterComplete.js":"9","/home/ismaelai/development/e-commerce-project/client/src/reducers/userReducer.js":"10","/home/ismaelai/development/e-commerce-project/client/src/reducers/index.js":"11","/home/ismaelai/development/e-commerce-project/client/src/pages/auth/ForgotPassword.js":"12"},{"size":1547,"mtime":1607543763346,"results":"13","hashOfConfig":"14"},{"size":896,"mtime":1607003258482,"results":"15","hashOfConfig":"14"},{"size":135,"mtime":1606567413955,"results":"16","hashOfConfig":"14"},{"size":3250,"mtime":1607542096756,"results":"17","hashOfConfig":"14"},{"size":1565,"mtime":1607775086780,"results":"18","hashOfConfig":"14"},{"size":1827,"mtime":1607541641516,"results":"19","hashOfConfig":"14"},{"size":677,"mtime":1606994435752,"results":"20","hashOfConfig":"14"},{"size":5103,"mtime":1606936845300,"results":"21","hashOfConfig":"14"},{"size":1995,"mtime":1607000293642,"results":"22","hashOfConfig":"14"},{"size":224,"mtime":1607003385372,"results":"23","hashOfConfig":"14"},{"size":179,"mtime":1607002743672,"results":"24","hashOfConfig":"14"},{"size":1606,"mtime":1607774423210,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"l12xae",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},"/home/ismaelai/development/e-commerce-project/client/src/App.js",["58"],"import React, {useEffect} from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'antd/dist/antd.css';\n\n\nimport Login from './pages/auth/Login.js';\nimport Register from './pages/auth/Register.js';\nimport Home from './pages/Home.js';\nimport Header from './components/nav/Header.js';\nimport RegisterComplete from './pages/auth/RegisterComplete.js';\nimport ForgotPassword from './pages/auth/ForgotPassword.js';\nimport { auth } from './firebase.js';\nimport { useDispatch } from 'react-redux';\n\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  // to check firebase auth state\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        const idTokenResult = await user.getIdTokenResult()\n        dispatch({\n          type: 'LOGGED_IN_USER',\n          payload: {\n            email: user.email,\n            token: idTokenResult.token,\n          }\n        })\n      }\n    });\n    // cleanup\n    return () => unsubscribe();\n  }, [])\n \n  return (\n    <>\n      <Header />\n      <ToastContainer />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/register/complete\" component={RegisterComplete} />\n        <Route exact path=\"/forgot/password\" component={ForgotPassword} />\n      </Switch>\n    </>\n  );\n};\nexport default App;","/home/ismaelai/development/e-commerce-project/client/src/index.js",[],["59","60"],"/home/ismaelai/development/e-commerce-project/client/src/pages/Home.js",[],["61","62"],"/home/ismaelai/development/e-commerce-project/client/src/pages/auth/Login.js",["63"],"import React, { useState } from 'react';\nimport { auth, googleAuthProvider } from '../../firebase.js';\nimport { toast } from 'react-toastify';\nimport { Button } from 'antd';\nimport { MailOutlined, GoogleOutlined } from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst Login = ({ history }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  let dispatch = useDispatch();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true)\n    // console.table(email, password);\n    try {\n      const result = await auth.signInWithEmailLinkAndPassword(email, password);\n      // console.log(result);\n      const { user } = result\n      const idTokenResult = await user.getIdTokenResult();\n      \n      dispatch({\n        type: 'LOGGED_IN_USER',\n        payload: {\n          email: user.email,\n          token: idTokenResult.token,\n        }\n      });\n\n      history.push('/')\n\n    } catch (error) {\n      console.log(error)\n      toast.error(error.message)\n      setLoading(false)\n\n    }\n  };\n\n  const googleLogin = async () => {\n    auth.signInWithPopup(googleAuthProvider)\n      .then(async (result) => {\n        const { user } = result;\n        const idTokenResult = await user.getIdTokenResult();\n        dispatch({\n          type: 'LOGGED_IN_USER',\n          payload: {\n            email: user.email,\n            token: idTokenResult.token,\n          },\n        });\n\n        history.push('/');\n      })\n      .catch((err) => {\n        console.log(err);\n        toast.error(err.message);\n      });\n  };\n\n  const loginForm = () => (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <input\n          type=\"email\"\n          className=\"form-control\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Your email\"\n          autoFocus\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Your password\"\n        />\n      </div>\n\n      <br></br>\n      <button\n        onClick={handleSubmit}\n        type=\"primary\"\n        className=\"mb-3\"\n        block\n        shape=\"round\"\n        icon={<MailOutlined />}\n        size=\"large\"\n        disabled={!email || password.length < 6}\n      >\n        Login with Email/Password\n      </button>\n    </form>\n  );\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3\">\n        {loading ? <h4 className=\"text-danger\">Loading...</h4> : <h4>Login</h4>}\n\n        {loginForm()}\n\n        <button\n          onClick={googleLogin}\n          type=\"danger\"\n          className=\"mb-3\"\n          block\n          shape=\"round\"\n          icon={<GoogleOutlined />}\n          size=\"large\"\n        >\n            Login with Google\n        </button>\n          \n          <Link to='/forgot/password' className='float-right text-danger'>Forgot Password</Link>\n      </div>\n      </div>\n      </div>\n  );\n};\nexport default Login;\n","/home/ismaelai/development/e-commerce-project/client/src/pages/auth/Register.js",["64"],"/home/ismaelai/development/e-commerce-project/client/src/components/nav/Header.js",[],"/home/ismaelai/development/e-commerce-project/client/src/firebase.js",[],["65","66"],"/home/ismaelai/development/e-commerce-project/client/src/serviceWorker.js",[],["67","68"],"/home/ismaelai/development/e-commerce-project/client/src/pages/auth/RegisterComplete.js",["69"],"import React, { useState, useEffect } from 'react';\nimport { auth } from '../../firebase.js';\nimport { toast } from 'react-toastify';\n\nconst RegisterComplete = ({ history }) => {\n  const [email, setEmail] = useState('');\n  const [password, SetPassword] = useState('');\n\n  useEffect(() => {\n    setEmail(window.localStorage.getItem('emailForRegistration'));\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!email || !password) {\n      toast.error('Email and password is required.');\n      return;\n    }\n    if (password.length < 6) {\n      toast.error('Password must be at least 6 characters.');\n      return;\n    }\n\n    try {\n      const result = await auth.signInWithEmailLink(\n        email,\n        window.location.href,\n      );\n\n      if (result.user.emailVerified) {\n        //remove user email from local sotage\n        window.localStorage.removeItem('emailForRegistration');\n        // get user id token\n        let user = auth.currentUser;\n        await user.updatePassword(password);\n        const idTokenResult = await user.getIdTokenResult();\n        //redux store\n\n        //redirect\n        history.push('/');\n      }\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n\n  const completeRegistrationForm = () => (\n    <form onSubmit={handleSubmit}>\n      <input type=\"email\" className=\"form-control\" value={email} disabled />\n      <input\n        type=\"password\"\n        className=\"form-control\"\n        value={password}\n        onChange={(e) => SetPassword(e.target.value)}\n        placeholder=\"Password\"\n        autoFocus\n      />\n      <br />\n      <button type=\"submit\" className=\"btn btn-raised\">\n        Complete Registration\n      </button>\n    </form>\n  );\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3\"></div>\n        <h4>Register Complete </h4>\n\n        {completeRegistrationForm()}\n      </div>\n    </div>\n  );\n};\nexport default RegisterComplete;\n","/home/ismaelai/development/e-commerce-project/client/src/reducers/userReducer.js",[],"/home/ismaelai/development/e-commerce-project/client/src/reducers/index.js",[],"/home/ismaelai/development/e-commerce-project/client/src/pages/auth/ForgotPassword.js",["70","71"],"import React, { useState, useEffect } from 'react';\nimport { auth, googleAuthProvider } from '../../firebase.js';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\n\nconst ForgotPassword = ({ history }) => {\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const { user } = useSelector((state) => ({ ...state }));\n\n  useEffect(() => {\n    if (user && user.token) history.push('/');\n  }, [])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    const config = {\n      url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT,\n      handleCodeInApp: true,\n    };\n\n    await auth\n      .sendPasswordResetEmail(email, config)\n      .then(() => {\n        setEmail('');\n        setLoading(false);\n        toast.success('Check your email for password reset link');\n      })\n      .catch((error) => {\n        setLoading(false);\n        toast.error(error.message);\n      });\n  };\n\n  return (\n    <div className=\"container col-md-6 offset-md-3 p-5\">\n      {loading ? (\n        <h4 className=\"text-danger\">Loading</h4>\n      ) : (\n        <h4>Forgot Password</h4>\n      )}\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          className=\"form-control\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Type your email\"\n          autoFocus\n        />\n        <br />\n        <button className=\"btn btn-raised\" disabled={!email}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n",{"ruleId":"72","severity":1,"message":"73","line":38,"column":6,"nodeType":"74","endLine":38,"endColumn":8,"suggestions":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"76","replacedBy":"80"},{"ruleId":"78","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":4,"column":10,"nodeType":"84","messageId":"85","endLine":4,"endColumn":16},{"ruleId":"72","severity":1,"message":"86","line":14,"column":6,"nodeType":"74","endLine":14,"endColumn":12,"suggestions":"87"},{"ruleId":"76","replacedBy":"88"},{"ruleId":"78","replacedBy":"89"},{"ruleId":"76","replacedBy":"90"},{"ruleId":"78","replacedBy":"91"},{"ruleId":"82","severity":1,"message":"92","line":36,"column":15,"nodeType":"84","messageId":"85","endLine":36,"endColumn":28},{"ruleId":"82","severity":1,"message":"93","line":2,"column":16,"nodeType":"84","messageId":"85","endLine":2,"endColumn":34},{"ruleId":"72","severity":1,"message":"94","line":14,"column":6,"nodeType":"74","endLine":14,"endColumn":8,"suggestions":"95"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["96"],"no-native-reassign",["97"],"no-negated-in-lhs",["98"],["97"],["98"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["99"],["97"],["98"],["97"],["98"],"'idTokenResult' is assigned a value but never used.","'googleAuthProvider' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'user'. Either include them or remove the dependency array.",["100"],{"desc":"101","fix":"102"},"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"103","fix":"105"},"Update the dependencies array to be: [dispatch]",{"range":"106","text":"107"},"Update the dependencies array to be: [history, user]",{"range":"108","text":"109"},{"range":"110","text":"109"},[1093,1095],"[dispatch]",[450,456],"[history, user]",[464,466]]